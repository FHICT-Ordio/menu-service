name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore "./menu-service/" 
    - name: Build
      run: dotnet build --no-restore "./menu-service/"
    - name: Test
      run: dotnet test --no-build --verbosity normal "./menu-service/"

  deployment:
    name: deployment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        run: |
          export DOCKER_BUILDKIT=0
          export COMPOSE_DOCKER_CLI_BUILD=0
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/ordio:latest -f ./menu-service/Dockerfile
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ordio:latest

  # publish:
  #     runs-on: ubuntu-latest
  #     needs: build
  #     permissions: 
  #       contents: read
  #       packages: write
  #       id-token: write
  #     steps:
  #       - name: Checkout repository
  #         uses: actions/checkout@v2

  #       - name: Setup Docker buildx
  #         uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

  #       - name: Log into registry ${{ env.REGISTRY }}
  #         if: github.event_name != 'pull_request'
  #         uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
  #         with:
  #           registry: ${{ env.REGISTRY }}
  #           username: ${{ secrets.DOCKER_HUB_USERNAME }}
  #           password: ${{ secrets.DOCKER_HUB_TOKEN }}

  #       - name: Extract Docker metadata
  #         id: meta
  #         uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #         with:
  #           images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #       - name: Build and push Docker image
  #         id: build-and-push
  #         uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #         with:
  #           context: ./menu-service/
  #           file: ./menu-service/menu-service/Dockerfile
  #           push: ${{ github.event_name != 'pull_request' }}
  #           tags: ${{ steps.meta.outputs.tags }}
  #           labels: ${{ steps.meta.outputs.labels }}


      # - name: Deploy container
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: ${{ secrets.PORT }}
      #     script: |
      #       docker stop svbackend
      #       docker rm svbackend
      #       docker pull ${{ secrets.DOCKERHUB_IMAGE }}
      #       docker run -d -p 83:8080 --name=svbackend ${{ secrets.DOCKERHUB_IMAGE }}
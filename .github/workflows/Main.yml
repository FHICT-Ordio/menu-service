name: Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore "./menu-service/" 
    - name: Build
      run: dotnet build --no-restore "./menu-service/"
    - name: Test
      run: dotnet test --no-build --verbosity normal "./menu-service/"

  deployment:
    name: deployment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./menu-service/
          file: ./menu-service/menu-service/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/menu-service:latest
      - name: Deploy Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd Software_S3\Docker
            docker-compose stop menu-service
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/menu-service:latest
            docker-compose up -d --build menu-service
  
  push-docs:
    runs-on: ubuntu-latest
    needs: build
    #if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: Eeventify/general
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Download docs artifact
        uses: actions/download-artifact@v3
        with:
          name: docs
      
      - name: Check Git status
        id: check
        run: echo "::set-output name=status::$(git status -s)"
      
      - name: Commit files
        id: commit
        if: steps.check.outputs.status != ''
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Add changes"
          git push




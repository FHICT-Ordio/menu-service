openapi: 3.0.1
info:
  title: Menu API
  description: An API used for handling restaurant menus
  version: v1
servers:
  - url: http://86.92.40.132:1000
    description: Main production server
  - url: http://localhost:1001
    description: Internal testing server
paths:
  /Menu:
    put:
      tags:
        - Menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          text/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          description: Success
  /Menu/Test:
    put:
      tags:
        - Menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          text/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          description: Success
  '/Menu/{id}':
    delete:
      tags:
        - Menu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    get:
      tags:
        - Menu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/Menu/Items/{id}':
    get:
      tags:
        - Menu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOptions'
          text/json:
            schema:
              $ref: '#/components/schemas/GetOptions'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GetOptions'
      responses:
        '200':
          description: Success
  '/Menu/TestPut/{id}':
    put:
      tags:
        - Menu
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          text/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Success
components:
  schemas:
    Category:
      type: object
      properties:
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    FilterType:
      enum:
        - NONE
        - NAME
        - NAME_REGEX
        - PRICE_RANGE
      type: string
    GetOptions:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/SortType'
        filter:
          $ref: '#/components/schemas/FilterType'
        filterValue:
          nullable: true
      additionalProperties: false
    Menu:
      type: object
      properties:
        title:
          type: string
          nullable: true
        restaurantName:
          type: string
          nullable: true
      additionalProperties: false
    SortType:
      enum:
        - ALP_ASC
        - ALP_DES
        - PRICE_ASC
        - PRICE_DES
      type: string